import streamlit as st
import os
import sys
import logging
import io
import time
import tempfile
import shutil
from datetime import datetime
from pathlib import Path
from typing import Dict, Any, List, Optional, Tuple
import pandas as pd
from openpyxl.utils import get_column_letter

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞ –≤ PYTHONPATH
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))

# –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–µ –∏–º–ø–æ—Ä—Ç—ã –≤–º–µ—Å—Ç–æ –∞–±—Å–æ–ª—é—Ç–Ω—ã—Ö
from utils import config_manager
from utils import excel_utils
from openpyxl import load_workbook
from PIL import Image as PILImage

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–∞–ø–∫—É –∑–∞–≥—Ä—É–∑–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
def get_downloads_folder():
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ –∑–∞–≥—Ä—É–∑–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    if os.name == 'nt':  # Windows
        import winreg
        sub_key = r'SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer\Shell Folders'
        downloads_guid = '{374DE290-123F-4565-9164-39C4925E467B}'
        with winreg.OpenKey(winreg.HKEY_CURRENT_USER, sub_key) as key:
            try:
                return winreg.QueryValueEx(key, downloads_guid)[0]
            except:
                return os.path.join(os.path.expanduser('~'), 'Downloads')
    else:  # Linux, macOS –∏ –¥—Ä—É–≥–∏–µ
        return os.path.join(os.path.expanduser('~'), 'Downloads')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_stream = io.StringIO()
log_handler = logging.StreamHandler(log_stream)
log_handler.setFormatter(logging.Formatter('%(asctime)s - %(levelname)s - %(name)s - %(message)s'))
log_handler.setLevel(logging.INFO)

file_handler = logging.FileHandler(os.path.join(os.path.dirname(os.path.dirname(__file__)), 'logs', f'app_{datetime.now().strftime("%Y%m%d_%H%M%S")}.log'))
file_handler.setFormatter(logging.Formatter('%(asctime)s - %(levelname)s - %(name)s - %(message)s'))
file_handler.setLevel(logging.DEBUG)

root_logger = logging.getLogger()
root_logger.setLevel(logging.DEBUG)
root_logger.addHandler(log_handler)
root_logger.addHandler(file_handler)

log = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
config_folder = os.path.join(os.path.dirname(os.path.dirname(__file__)), 'settings_presets')
config_manager.init_config_manager(config_folder)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.set_page_config(
    page_title="ExcelWithImages - –í—Å—Ç–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ Excel",
    page_icon="üìä",
    layout="wide",
    initial_sidebar_state="expanded"
)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
def ensure_temp_dir() -> str:
    """
    –°–æ–∑–¥–∞–µ—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø—É—Ç—å –∫ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏.
    
    Returns:
        –ü—É—Ç—å –∫ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    """
    temp_dir = os.path.join(tempfile.gettempdir(), 'excelwithimages')
    os.makedirs(temp_dir, exist_ok=True)
    return temp_dir

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–æ–∫ –≤ —Å–∞–π–¥–±–∞—Ä–µ
def update_sidebar_buttons():
    # –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    if st.sidebar.button('–°–±—Ä–æ—Å–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏', key='reset_button'):
        config_manager.reset_settings()
        st.session_state['current_settings'] = config_manager.get_config_manager().current_settings
        st.rerun()
    
    # –†–∞–±–æ—Ç–∞ —Å –ø—Ä–µ—Å–µ—Ç–∞–º–∏
    st.sidebar.subheader("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–µ—Å–µ—Ç–∞–º–∏")
    
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–µ—Å–µ—Ç–æ–≤
    presets = config_manager.get_presets_list()
    
    # –í–≤–æ–¥ –∏–º–µ–Ω–∏ –ø—Ä–µ—Å–µ—Ç–∞
    preset_name = st.sidebar.text_input("–ò–º—è –ø—Ä–µ—Å–µ—Ç–∞", 
                                        value=config_manager.get_config_manager().current_preset_name,
                                        key='preset_name')
    
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø—Ä–µ—Å–µ—Ç–∞–º–∏
    col1, col2 = st.sidebar.columns(2)
    
    if col1.button('–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–µ—Å–µ—Ç', key='save_preset'):
        if preset_name:
            config_manager.save_settings(preset_name)
            st.sidebar.success(f"–ü—Ä–µ—Å–µ—Ç '{preset_name}' —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
            st.rerun()
        else:
            st.sidebar.error("–£–∫–∞–∂–∏—Ç–µ –∏–º—è –ø—Ä–µ—Å–µ—Ç–∞!")
    
    if col2.button('–£–¥–∞–ª–∏—Ç—å –ø—Ä–µ—Å–µ—Ç', key='delete_preset'):
        if preset_name in presets:
            if config_manager.delete_preset(preset_name):
                st.sidebar.success(f"–ü—Ä–µ—Å–µ—Ç '{preset_name}' —É–¥–∞–ª–µ–Ω!")
                st.rerun()
        else:
            st.sidebar.error("–í—ã–±–µ—Ä–∏—Ç–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –ø—Ä–µ—Å–µ—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è!")
    
    # –í—ã–±–æ—Ä –ø—Ä–µ—Å–µ—Ç–∞
    if presets:
        selected_preset = st.sidebar.selectbox(
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ—Å–µ—Ç", 
            options=presets,
            key='selected_preset'
        )
        
        if st.sidebar.button('–ó–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–µ—Å–µ—Ç', key='load_preset'):
            if config_manager.load_settings(selected_preset):
                st.session_state['current_settings'] = config_manager.get_config_manager().current_settings
                st.sidebar.success(f"–ü—Ä–µ—Å–µ—Ç '{selected_preset}' –∑–∞–≥—Ä—É–∂–µ–Ω!")
                st.rerun()
            else:
                st.sidebar.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–µ—Å–µ—Ç '{selected_preset}'!")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
def show_settings():
    st.sidebar.subheader("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Excel
    with st.sidebar.expander("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ Excel", expanded=True):
        col1, col2 = st.sidebar.columns(2)
        
        # –°—Ç–æ–ª–±–µ—Ü —Å –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏
        article_column = col1.text_input(
            "–°—Ç–æ–ª–±–µ—Ü —Å –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏",
            value=config_manager.get_setting("excel_settings.article_column", "C"),
            help="–ë—É–∫–≤–∞ —Å—Ç–æ–ª–±—Ü–∞, —Å–æ–¥–µ—Ä–∂–∞—â–µ–≥–æ –∞—Ä—Ç–∏–∫—É–ª—ã —Ç–æ–≤–∞—Ä–æ–≤"
        )
        config_manager.set_setting("excel_settings.article_column", article_column.upper())
        
        # –°—Ç–æ–ª–±–µ—Ü –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        image_column = col2.text_input(
            "–°—Ç–æ–ª–±–µ—Ü –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π",
            value=config_manager.get_setting("excel_settings.image_column", "A"),
            help="–ë—É–∫–≤–∞ —Å—Ç–æ–ª–±—Ü–∞, –∫—É–¥–∞ –±—É–¥—É—Ç –≤—Å—Ç–∞–≤–ª–µ–Ω—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
        )
        config_manager.set_setting("excel_settings.image_column", image_column.upper())
        
        # –ù–∞—á–∞–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞
        start_row = col1.number_input(
            "–ù–∞—á–∞–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞",
            min_value=1,
            value=config_manager.get_setting("excel_settings.start_row", 2),
            help="–ù–æ–º–µ—Ä —Å—Ç—Ä–æ–∫–∏, —Å –∫–æ—Ç–æ—Ä–æ–π –Ω–∞—á–Ω–µ—Ç—Å—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ (–æ–±—ã—á–Ω–æ 2, —Ç.–∫. –≤ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏)"
        )
        config_manager.set_setting("excel_settings.start_row", int(start_row))
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–±–æ—Ä –Ω–æ–º–µ—Ä–∞ –ª–∏—Å—Ç–∞
        sheet_index = col2.number_input(
            "–ù–æ–º–µ—Ä –ª–∏—Å—Ç–∞",
            min_value=1,
            value=config_manager.get_setting("excel_settings.sheet_index", 1),
            help="–ù–æ–º–µ—Ä –ª–∏—Å—Ç–∞ –≤ Excel —Ñ–∞–π–ª–µ (–Ω–∞—á–∏–Ω–∞—è —Å 1)"
        )
        config_manager.set_setting("excel_settings.sheet_index", int(sheet_index))
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤
        adjust_dimensions = col1.checkbox(
            "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞—Ç—å —Ä–∞–∑–º–µ—Ä—ã —Å—Ç—Ä–æ–∫ –∏ —Å—Ç–æ–ª–±—Ü–æ–≤",
            value=config_manager.get_setting("excel_settings.adjust_dimensions", True),
            help="–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –∏–∑–º–µ–Ω—è—Ç—å –≤—ã—Å–æ—Ç—É —Å—Ç—Ä–æ–∫ –∏ —à–∏—Ä–∏–Ω—É —Å—Ç–æ–ª–±—Ü–æ–≤ –ø–æ–¥ —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"
        )
        config_manager.set_setting("excel_settings.adjust_dimensions", adjust_dimensions)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    with st.sidebar.expander("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π", expanded=True):
        col1, col2 = st.sidebar.columns(2)
        
        # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        max_size_kb = col1.number_input(
            "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä (–ö–ë)",
            min_value=10,
            max_value=1000,
            value=config_manager.get_setting("image_settings.max_size_kb", 100),
            help="–ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –∫–∏–ª–æ–±–∞–π—Ç–∞—Ö. –ë–æ–ª—å—à–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –±—É–¥—É—Ç —Å–∂–∞—Ç—ã."
        )
        config_manager.set_setting("image_settings.max_size_kb", int(max_size_kb))
        
        # –ö–∞—á–µ—Å—Ç–≤–æ JPEG
        quality = col2.slider(
            "–ö–∞—á–µ—Å—Ç–≤–æ JPEG",
            min_value=30,
            max_value=100,
            value=config_manager.get_setting("image_settings.quality", 90),
            help="–ù–∞—á–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ JPEG –ø—Ä–∏ —Å–∂–∞—Ç–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"
        )
        config_manager.set_setting("image_settings.quality", int(quality))
        
        # –¶–µ–ª–µ–≤—ã–µ —Ä–∞–∑–º–µ—Ä—ã –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        target_width = col1.number_input(
            "–¶–µ–ª–µ–≤–∞—è —à–∏—Ä–∏–Ω–∞ (–ø–∏–∫—Å.)",
            min_value=50,
            max_value=1000,
            value=config_manager.get_setting("image_settings.target_width", 300),
            help="–¶–µ–ª–µ–≤–∞—è —à–∏—Ä–∏–Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ø–∏–∫—Å–µ–ª—è—Ö"
        )
        config_manager.set_setting("image_settings.target_width", int(target_width))
        
        target_height = col2.number_input(
            "–¶–µ–ª–µ–≤–∞—è –≤—ã—Å–æ—Ç–∞ (–ø–∏–∫—Å.)",
            min_value=50,
            max_value=1000,
            value=config_manager.get_setting("image_settings.target_height", 300),
            help="–¶–µ–ª–µ–≤–∞—è –≤—ã—Å–æ—Ç–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –ø–∏–∫—Å–µ–ª—è—Ö"
        )
        config_manager.set_setting("image_settings.target_height", int(target_height))
        
        # –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
        supported_extensions = st.sidebar.multiselect(
            "–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ —Ç–∏–ø—ã —Ñ–∞–π–ª–æ–≤",
            options=[".jpg", ".jpeg", ".png", ".gif", ".bmp", ".tiff", ".webp"],
            default=config_manager.get_setting("image_settings.supported_extensions", [".jpg", ".jpeg", ".png", ".gif", ".bmp"]),
            help="–¢–∏–ø—ã —Ñ–∞–π–ª–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è"
        )
        config_manager.set_setting("image_settings.supported_extensions", supported_extensions)
    
    # UI –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    with st.sidebar.expander("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞", expanded=False):
        col1, col2 = st.sidebar.columns(2)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä
        show_preview = col1.checkbox(
            "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä",
            value=config_manager.get_setting("ui_settings.show_preview", True),
            help="–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –Ω–∞–π–¥–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"
        )
        config_manager.set_setting("ui_settings.show_preview", show_preview)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        show_stats = col2.checkbox(
            "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É",
            value=config_manager.get_setting("ui_settings.show_stats", True),
            help="–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –æ–±—Ä–∞–±–æ—Ç–∫–∏"
        )
        config_manager.set_setting("ui_settings.show_stats", show_stats)
        
        # –¢–µ–º–∞
        theme = col1.selectbox(
            "–¢–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è",
            options=["light", "dark"],
            index=0 if config_manager.get_setting("ui_settings.theme", "light") == "light" else 1,
            help="–¢–µ–º–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞"
        )
        config_manager.set_setting("ui_settings.theme", theme)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞ Excel
def file_uploader_section():
    st.subheader("–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ Excel")
    
    # –ó–∞–≥—Ä—É–∑–∫–∞ Excel —Ñ–∞–π–ª–∞
    uploaded_file = st.file_uploader(
        "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª Excel",
        type=["xlsx", "xls"],
        help="–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª Excel, –≤ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
    )
    
    if uploaded_file is not None:
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        temp_dir = ensure_temp_dir()
        temp_file = os.path.join(temp_dir, uploaded_file.name)
        
        with open(temp_file, "wb") as f:
            f.write(uploaded_file.getbuffer())
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
        config_manager.set_setting("paths.input_file_path", temp_file)
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ –≤ session_state
        st.session_state['excel_uploaded'] = True
        st.session_state['excel_file_path'] = temp_file
        st.session_state['excel_file_name'] = uploaded_file.name
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ñ–∞–π–ª–µ
        st.success(f"–§–∞–π–ª {uploaded_file.name} —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω!")
        
        try:
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
            wb = load_workbook(temp_file, read_only=True)
            
            # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ª–∏—Å—Ç–æ–≤
            sheet_names = wb.sheetnames
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ –ª–∏—Å—Ç–æ–≤ –≤ session_state
            st.session_state['excel_sheets'] = sheet_names
            
            # –í—ã–±–æ—Ä –ª–∏—Å—Ç–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
            selected_sheet_index = st.selectbox(
                "–í—ã–±–µ—Ä–∏—Ç–µ –ª–∏—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞",
                options=list(range(1, len(sheet_names) + 1)),
                format_func=lambda x: f"{x}. {sheet_names[x-1]}",
                index=config_manager.get_setting("excel_settings.sheet_index", 1) - 1,
                key="preview_sheet_index"
            )
            
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ª–∏—Å—Ç –∫–∞–∫ –∞–∫—Ç–∏–≤–Ω—ã–π –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
            config_manager.set_setting("excel_settings.sheet_index", selected_sheet_index)
            
            # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ª–∏—Å—Ç
            active_sheet = wb[sheet_names[selected_sheet_index - 1]]
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ª–∏—Å—Ç–µ
            col1, col2 = st.columns(2)
            col1.write(f"**–ò–º—è –ª–∏—Å—Ç–∞:** {active_sheet.title}")
            col1.write(f"**–†–∞–∑–º–µ—Ä:** {active_sheet.max_row} —Å—Ç—Ä–æ–∫ √ó {active_sheet.max_column} —Å—Ç–æ–ª–±—Ü–æ–≤")
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã
            article_column = config_manager.get_setting("excel_settings.article_column", "C")
            image_column = config_manager.get_setting("excel_settings.image_column", "A")
            start_row = config_manager.get_setting("excel_settings.start_row", 2)
            
            col2.write(f"**–°—Ç–æ–ª–±–µ—Ü —Å –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏:** {article_column}")
            col2.write(f"**–°—Ç–æ–ª–±–µ—Ü –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:** {image_column}")
            col2.write(f"**–ù–∞—á–∞–ª—å–Ω–∞—è —Å—Ç—Ä–æ–∫–∞:** {start_row}")
            
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ, –µ—Å–ª–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –∫–æ–ª–æ–Ω–∫–∞ –º–µ–Ω—å—à–µ, —á–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Å—Ç–æ–ª–±–µ—Ü
            max_col_letter = get_column_letter(active_sheet.max_column) if hasattr(active_sheet, 'max_column') else 'A'
            if ord(article_column.upper()) - ord('A') + 1 > active_sheet.max_column:
                st.warning(f"‚ö†Ô∏è –°—Ç–æ–ª–±–µ—Ü –∞—Ä—Ç–∏–∫—É–ª–æ–≤ '{article_column}' –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö (–º–∞–∫—Å–∏–º—É–º: {max_col_letter})")
            
            if ord(image_column.upper()) - ord('A') + 1 > active_sheet.max_column:
                st.warning(f"‚ö†Ô∏è –°—Ç–æ–ª–±–µ—Ü –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π '{image_column}' –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö (–º–∞–∫—Å–∏–º—É–º: {max_col_letter})")
            
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫ –≤ —Ç–∞–±–ª–∏—Ü–µ
            rows_data = []
            
            # –ü–æ–ª—É—á–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤ (–ø–µ—Ä–≤–∞—è —Å—Ç—Ä–æ–∫–∞)
            headers = []
            for cell in active_sheet[1]:
                headers.append(cell.value if cell.value is not None else "")
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ (—Å—Ç—Ä–æ–∫–∏ 2-6)
            for row in active_sheet.iter_rows(min_row=2, max_row=6):
                row_data = []
                for cell in row:
                    row_data.append(cell.value if cell.value is not None else "")
                rows_data.append(row_data)
            
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–∞–±–ª–∏—Ü–µ
            st.write("–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –¥–∞–Ω–Ω—ã—Ö:")
            df_preview = pd.DataFrame(rows_data, columns=headers)
            st.dataframe(df_preview)
            
            # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Å—Ç–æ–ª–±—Ü–∞ —Å –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏
            if len(rows_data) > 0:
                article_col_index = ord(article_column.upper()) - ord('A')
                if 0 <= article_col_index < len(headers):
                    article_values = []
                    for row in rows_data:
                        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∏–Ω–¥–µ–∫—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö —Ä–∞–∑–º–µ—Ä–∞ —Å—Ç—Ä–æ–∫–∏
                        if article_col_index < len(row):
                            article_values.append(row[article_col_index])
                        else:
                            article_values.append(None)
                    
                    articles_found = sum(1 for a in article_values if a)
                    
                    if articles_found > 0:
                        st.success(f"–ù–∞–π–¥–µ–Ω–æ {articles_found} –∞—Ä—Ç–∏–∫—É–ª–æ–≤ –≤ —Å—Ç–æ–ª–±—Ü–µ {article_column} –≤ –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–µ.")
                    else:
                        st.warning(f"–í —Å—Ç–æ–ª–±—Ü–µ {article_column} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∞—Ä—Ç–∏–∫—É–ª–æ–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –≤—ã–±–æ—Ä–∞ —Å—Ç–æ–ª–±—Ü–∞ —Å –∞—Ä—Ç–∏–∫—É–ª–∞–º–∏.")
                        
                        # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –¥—Ä—É–≥–∏–µ –ª–∏—Å—Ç—ã, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
                        if len(sheet_names) > 1:
                            other_sheets = [name for i, name in enumerate(sheet_names) if i+1 != selected_sheet_index]
                            st.info(f"üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –ª–∏—Å—Ç: {', '.join(other_sheets)}")
                else:
                    st.warning(f"–°—Ç–æ–ª–±–µ—Ü {article_column} –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ —Ç–∞–±–ª–∏—Ü—ã. –í —Ñ–∞–π–ª–µ —Ç–æ–ª—å–∫–æ {len(headers)} —Å—Ç–æ–ª–±—Ü–æ–≤.")
            
            # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª
            wb.close()
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
            log.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞: {e}")
    else:
        # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω, —Å–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ —Ñ–ª–∞–≥–∏
        st.session_state['excel_uploaded'] = False
        st.session_state.pop('excel_file_path', None)
        st.session_state.pop('excel_file_name', None)
        st.session_state.pop('excel_sheets', None)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤—ã—Ö–æ–¥–Ω–æ–π –ø–∞–ø–∫–∏
def output_folder_section():
    st.subheader("–ü–∞–ø–∫–∞ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ –∑–∞–≥—Ä—É–∑–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    default_downloads = get_downloads_folder()
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –≤—ã—Ö–æ–¥–Ω—É—é –ø–∞–ø–∫—É
    current_output_folder = config_manager.get_setting("paths.output_folder_path", default_downloads)
    
    # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –ø—É—Ç–∏
    output_folder = st.text_input(
        "–ü—É—Ç—å –∫ –ø–∞–ø–∫–µ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞",
        value=current_output_folder,
        help="–£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ, –≥–¥–µ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–π —Ñ–∞–π–ª Excel"
    )
    
    if output_folder:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–∞–ø–∫–∞
        if not os.path.exists(output_folder):
            st.warning(f"–ü–∞–ø–∫–∞ {output_folder} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –û–Ω–∞ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞.")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
        config_manager.set_setting("paths.output_folder_path", output_folder)
    
    # –ü–æ–º–æ—â—å –ø–æ –≤—ã–±–æ—Ä—É –ø–∞–ø–∫–∏
    with st.expander("–ö–∞–∫ —É–∫–∞–∑–∞—Ç—å –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ"):
        st.write("""
        –í—ã –º–æ–∂–µ—Ç–µ –≤–≤–µ—Å—Ç–∏ –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä:
        - C:\\Users\\Username\\Documents\\Excel_Results
        - /home/username/documents/excel_results
        
        –ò–ª–∏ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω—ã–π –ø—É—Ç—å –æ—Ç —Ç–µ–∫—É—â–µ–π –ø–∞–ø–∫–∏:
        - ./results
        - ../output
        """)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–∞–ø–∫–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
def images_folder_section():
    st.subheader("–ü–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –ø–∞–ø–∫—É —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
    current_images_folder = config_manager.get_setting("paths.images_folder_path", "")
    
    # –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –ø—É—Ç–∏
    images_folder = st.text_input(
        "–ü—É—Ç—å –∫ –ø–∞–ø–∫–µ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏",
        value=current_images_folder,
        help="–£–∫–∞–∂–∏—Ç–µ –ø—É—Ç—å –∫ –ø–∞–ø–∫–µ, –≥–¥–µ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏"
    )
    
    if images_folder:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–∞–ø–∫–∞
        if os.path.exists(images_folder):
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
            config_manager.set_setting("paths.images_folder_path", images_folder)
            
            # –ï—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
            if config_manager.get_setting("ui_settings.show_preview", True):
                # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                supported_extensions = tuple(config_manager.get_setting(
                    "image_settings.supported_extensions", 
                    [".jpg", ".jpeg", ".png", ".gif", ".bmp"]
                ))
                
                image_files = []
                for filename in os.listdir(images_folder):
                    if any(filename.lower().endswith(ext) for ext in supported_extensions):
                        image_files.append(os.path.join(images_folder, filename))
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–æ 5 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                if image_files:
                    st.write(f"–ù–∞–π–¥–µ–Ω–æ {len(image_files)} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π. –ü—Ä–∏–º–µ—Ä—ã:")
                    
                    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–ª–æ–Ω–æ–∫
                    columns = st.columns(min(5, len(image_files)))
                    for i, img_path in enumerate(image_files[:5]):
                        try:
                            img = PILImage.open(img_path)
                            columns[i].image(img, caption=os.path.basename(img_path), width=150)
                        except Exception as e:
                            columns[i].error(f"–û—à–∏–±–∫–∞: {e}")
                else:
                    st.warning(f"–í –ø–∞–ø–∫–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–º–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è–º–∏: {', '.join(supported_extensions)}")
        else:
            st.error(f"–ü–∞–ø–∫–∞ {images_folder} –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç!")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ñ–∞–π–ª–∞
def process_excel_file():
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    input_file = config_manager.get_setting("paths.input_file_path", "")
    output_folder = config_manager.get_setting("paths.output_folder_path", "")
    images_folder = config_manager.get_setting("paths.images_folder_path", "")
    
    log.info(f"–ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–∞–π–ª–∞: {input_file}")
    log.info(f"–í—ã—Ö–æ–¥–Ω–∞—è –ø–∞–ø–∫–∞: {output_folder}")
    log.info(f"–ü–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏: {images_folder}")
    
    if not input_file or not output_folder or not images_folder:
        error_msg = "–ù–µ —É–∫–∞–∑–∞–Ω—ã –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø—É—Ç–∏!"
        log.error(error_msg)
        st.error(error_msg)
        return
    
    if not os.path.isfile(input_file):
        error_msg = f"–§–∞–π–ª {input_file} –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        log.error(error_msg)
        st.error(error_msg)
        return
    
    if not os.path.isdir(images_folder):
        error_msg = f"–ü–∞–ø–∫–∞ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ {images_folder} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
        log.error(error_msg)
        st.error(error_msg)
        return
    
    # –°–æ–∑–¥–∞–µ–º –≤—ã—Ö–æ–¥–Ω—É—é –ø–∞–ø–∫—É, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    try:
        os.makedirs(output_folder, exist_ok=True)
        log.info(f"–í—ã—Ö–æ–¥–Ω–∞—è –ø–∞–ø–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –∏–ª–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {output_folder}")
    except Exception as e:
        error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –≤—ã—Ö–æ–¥–Ω–æ–π –ø–∞–ø–∫–∏: {e}"
        log.error(error_msg)
        st.error(error_msg)
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    article_column = config_manager.get_setting("excel_settings.article_column", "C")
    image_column = config_manager.get_setting("excel_settings.image_column", "A")
    start_row = config_manager.get_setting("excel_settings.start_row", 2)
    sheet_index = config_manager.get_setting("excel_settings.sheet_index", 1)
    max_size_kb = config_manager.get_setting("image_settings.max_size_kb", 100)
    quality = config_manager.get_setting("image_settings.quality", 90)
    adjust_dimensions = config_manager.get_setting("excel_settings.adjust_dimensions", True)
    
    log.info(f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏: article_column={article_column}, image_column={image_column}, start_row={start_row}, sheet_index={sheet_index}")
    log.info(f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: max_size_kb={max_size_kb}, quality={quality}, adjust_dimensions={adjust_dimensions}")
    
    # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é –∏—Å—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
    temp_dir = ensure_temp_dir()
    try:
        # –°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é —Ñ–∞–π–ª–∞ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
        log.info(f"–°–æ–∑–¥–∞–µ–º –∫–æ–ø–∏—é —Ñ–∞–π–ª–∞ {input_file} –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é {temp_dir}")
        temp_file = excel_utils.create_excel_copy(input_file, temp_dir)
        log.info(f"–°–æ–∑–¥–∞–Ω–∞ –∫–æ–ø–∏—è —Ñ–∞–π–ª–∞: {temp_file}")
        
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
        progress_bar = st.progress(0, text="–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ...")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
        log.info("–ù–∞—á–∏–Ω–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Ñ–∞–π–ª–∞...")
        with st.spinner("–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞..."):
            try:
                stats = excel_utils.process_excel_file(
                    excel_file=temp_file,
                    article_column=article_column,
                    image_column=image_column,
                    images_folder=images_folder,
                    start_row=start_row,
                    sheet_index=sheet_index,
                    max_size_kb=max_size_kb,
                    quality=quality,
                    adjust_dimensions=adjust_dimensions
                )
                
                log.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–¥–µ—Ä–∂–∏—Ç –æ–∂–∏–¥–∞–µ–º—ã–µ –∫–ª—é—á–∏
                if not stats or not isinstance(stats, dict) or "output_file" not in stats:
                    error_msg = "–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏. –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∞–Ω–Ω—ã–µ."
                    log.error(error_msg)
                    st.error(error_msg)
                    return
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å
                progress_bar.progress(100, text="–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
                if not os.path.exists(stats["output_file"]):
                    error_msg = f"–§–∞–π–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {stats['output_file']}"
                    log.error(error_msg)
                    st.error(error_msg)
                    return
                
                # –ö–æ–ø–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –≤—ã—Ö–æ–¥–Ω—É—é –ø–∞–ø–∫—É
                output_filename = f"{os.path.splitext(os.path.basename(input_file))[0]}_with_images.xlsx"
                output_file = os.path.join(output_folder, output_filename)
                log.info(f"–ö–æ–ø–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏–∑ {stats['output_file']} –≤ {output_file}")
                
                # –ï—Å–ª–∏ —Ñ–∞–π–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —É–¥–∞–ª—è–µ–º –µ–≥–æ
                if os.path.exists(output_file):
                    os.remove(output_file)
                    log.info(f"–£–¥–∞–ª–µ–Ω —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ñ–∞–π–ª: {output_file}")
                
                shutil.copy2(stats["output_file"], output_file)
                log.info(f"–§–∞–π–ª —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω –≤: {output_file}")
                
                # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
                try:
                    os.remove(stats["output_file"])
                    os.remove(temp_file)
                    log.info("–í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —É–¥–∞–ª–µ–Ω—ã")
                except Exception as e:
                    log.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã: {e}")
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Å –Ω–æ–≤—ã–º –ø—É—Ç–µ–º
                stats["output_file"] = output_file
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ session_state
                st.session_state["processing_stats"] = stats
                st.session_state["processing_complete"] = True
                
                # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                log.info("–û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏")
                show_results(stats)
                
            except Exception as e:
                error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ Excel —Ñ–∞–π–ª–∞: {e}"
                log.exception(error_msg)  # –õ–æ–≥–∏—Ä—É–µ–º —Å –ø–æ–ª–Ω—ã–º —Å—Ç–µ–∫–æ–º –≤—ã–∑–æ–≤–æ–≤
                st.error(error_msg)
    except Exception as e:
        error_msg = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–≥–æ—Ç–æ–≤–∫–µ —Ñ–∞–π–ª–∞ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ: {e}"
        log.exception(error_msg)  # –õ–æ–≥–∏—Ä—É–µ–º —Å –ø–æ–ª–Ω—ã–º —Å—Ç–µ–∫–æ–º –≤—ã–∑–æ–≤–æ–≤
        st.error(error_msg)

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –æ–±—Ä–∞–±–æ—Ç–∫–∏
def show_results(stats: Dict[str, Any]):
    if not stats:
        return
    
    st.success("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –æ—Å–Ω–æ–≤–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
    st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏")
    
    col1, col2, col3 = st.columns(3)
    col1.metric("–í—Å–µ–≥–æ –∞—Ä—Ç–∏–∫—É–ª–æ–≤", stats["total_articles"])
    col2.metric("–ù–∞–π–¥–µ–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π", stats["images_found"])
    col3.metric("–í—Å—Ç–∞–≤–ª–µ–Ω–æ –≤ Excel", stats["images_inserted"])
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ø—É—Ç—å –∫ –≤—ã—Ö–æ–¥–Ω–æ–º—É —Ñ–∞–π–ª—É
    st.info(f"–§–∞–π–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω: {stats['output_file']}")
    
    # –ö–Ω–æ–ø–∫–∞ –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –ø–∞–ø–∫–∏ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º
    if st.button("–û—Ç–∫—Ä—ã—Ç—å –ø–∞–ø–∫—É —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º"):
        output_folder = os.path.dirname(stats["output_file"])
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–æ–º–∞–Ω–¥—É –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –û–°
        if os.name == 'nt':  # Windows
            os.startfile(output_folder)
        elif os.name == 'posix':  # macOS –∏ Linux
            os.system(f"open {output_folder}")  # macOS
            # os.system(f"xdg-open {output_folder}")  # Linux

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
def main():
    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    st.title("ExcelWithImages")
    st.write("–í—Å—Ç–∞–≤–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –≤ Excel –ø–æ –∞—Ä—Ç–∏–∫—É–ª–∞–º")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º session_state –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è
    if 'excel_uploaded' not in st.session_state:
        st.session_state['excel_uploaded'] = False
    
    if 'start_processing' not in st.session_state:
        st.session_state['start_processing'] = False
    
    if 'processing_complete' not in st.session_state:
        st.session_state['processing_complete'] = False
    
    if 'processing_stats' not in st.session_state:
        st.session_state['processing_stats'] = None
    
    if 'current_settings' not in st.session_state:
        st.session_state['current_settings'] = config_manager.get_config_manager().current_settings
    
    # –î–æ–±–∞–≤–ª—è–µ–º –±–æ–∫–æ–≤—É—é –ø–∞–Ω–µ–ª—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    update_sidebar_buttons()
    show_settings()
    
    # –ï—Å–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –Ω–æ–≤–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏
    if st.session_state.get('processing_complete', False):
        show_results(st.session_state.get('processing_stats', {}))
        
        if st.button("–ù–∞—á–∞—Ç—å –Ω–æ–≤—É—é –æ–±—Ä–∞–±–æ—Ç–∫—É"):
            st.session_state['processing_complete'] = False
            st.session_state['processing_stats'] = None
            st.session_state['start_processing'] = False
            st.rerun()
    else:
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Å–µ–∫—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        
        # –î–æ–±–∞–≤–ª—è–µ–º –±–æ–ª—å—à—É—é –∫–Ω–æ–ø–∫—É "–ù–∞—á–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É" —Å–≤–µ—Ä—Ö—É
        if st.session_state.get('excel_uploaded', False):
            st.markdown("<style>div.stButton > button {background-color: #4CAF50; color: white; font-size: 20px; height: 60px; width: 100%;}</style>", unsafe_allow_html=True)
            if st.button("–ù–ê–ß–ê–¢–¨ –û–ë–†–ê–ë–û–¢–ö–£", key="big_process_button"):
                st.session_state['start_processing'] = True
        
        # 1. –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ Excel
        file_uploader_section()
        
        # 2. –í—ã–±–æ—Ä –ø–∞–ø–∫–∏ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
        images_folder_section()
        
        # 3. –í—ã–±–æ—Ä –≤—ã—Ö–æ–¥–Ω–æ–π –ø–∞–ø–∫–∏
        output_folder_section()
        
        # –ï—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–û–±—Ä–∞–±–æ—Ç–∞—Ç—å Excel —Ñ–∞–π–ª", –∑–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É
        if st.session_state.get('start_processing', False):
            process_excel_file()
            # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Ñ–ª–∞–≥, —á—Ç–æ–±—ã –Ω–µ –∑–∞–ø—É—Å–∫–∞—Ç—å –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–æ–≤—Ç–æ—Ä–Ω–æ
            st.session_state['start_processing'] = False
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –ª–æ–≥–∏
    with st.expander("–õ–æ–≥–∏", expanded=False):
        st.text_area("", value=log_stream.getvalue(), height=300)

if __name__ == "__main__":
    main() 